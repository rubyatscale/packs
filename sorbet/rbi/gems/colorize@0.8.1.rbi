# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `colorize` gem.
# Please instead update this file by running `bin/tapioca gem colorize`.

# typed: true

module Colorize; end

module Colorize::ClassMethods
  def color_codes; end
  def color_matrix(_ = T.unsafe(nil)); end
  def color_methods; end
  def color_samples; end
  def colors; end
  def disable_colorization(value = T.unsafe(nil)); end
  def disable_colorization=(value); end
  def mode_codes; end
  def modes; end
  def modes_methods; end
end

module Colorize::InstanceMethods
  def colorize(params); end
  def colorized?; end
  def uncolorize; end

  private

  def background_color(color); end
  def color(color); end
  def color_from_symbol(match, symbol); end
  def colors_from_hash(match, hash); end
  def colors_from_params(match, params); end
  def defaults_colors(match); end
  def mode(mode); end
  def require_windows_libs; end
  def scan_for_colors; end
  def split_colors(match); end
end

class ColorizedString < ::String
  def black; end
  def blink; end
  def blue; end
  def bold; end
  def cyan; end
  def green; end
  def hide; end
  def italic; end
  def light_black; end
  def light_blue; end
  def light_cyan; end
  def light_green; end
  def light_magenta; end
  def light_red; end
  def light_white; end
  def light_yellow; end
  def magenta; end
  def on_black; end
  def on_blue; end
  def on_cyan; end
  def on_green; end
  def on_light_black; end
  def on_light_blue; end
  def on_light_cyan; end
  def on_light_green; end
  def on_light_magenta; end
  def on_light_red; end
  def on_light_white; end
  def on_light_yellow; end
  def on_magenta; end
  def on_red; end
  def on_white; end
  def on_yellow; end
  def red; end
  def swap; end
  def underline; end
  def white; end
  def yellow; end

  class << self
    def [](string); end
  end
end
