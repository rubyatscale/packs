# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `packs` gem.
# Please instead update this file by running `bin/tapioca gem packs`.

module Packs
  class << self
    sig { returns(T::Array[::Packs::Pack]) }
    def all; end

    sig { void }
    def bust_cache!; end

    sig { returns(::Packs::Private::Configuration) }
    def config; end

    sig { params(blk: T.proc.params(arg0: ::Packs::Private::Configuration).void).void }
    def configure(&blk); end

    sig { params(name: ::String).returns(T.nilable(::Packs::Pack)) }
    def find(name); end

    sig { params(file_path: T.any(::Pathname, ::String)).returns(T.nilable(::Packs::Pack)) }
    def for_file(file_path); end

    private

    sig { returns(T::Array[::Pathname]) }
    def package_glob_patterns; end

    sig { returns(T::Hash[::String, ::Packs::Pack]) }
    def packs_by_name; end
  end
end

Packs::PACKAGE_FILE = T.let(T.unsafe(nil), String)

class Packs::Pack < ::T::Struct
  const :name, ::String
  const :path, ::Pathname
  const :raw_hash, T::Hash[T.untyped, T.untyped]
  const :relative_path, ::Pathname

  sig { returns(::String) }
  def last_name; end

  sig { returns(T::Hash[T.untyped, T.untyped]) }
  def metadata; end

  sig { params(relative: T::Boolean).returns(::Pathname) }
  def yml(relative: T.unsafe(nil)); end

  class << self
    sig { params(package_yml_absolute_path: ::Pathname).returns(::Packs::Pack) }
    def from(package_yml_absolute_path); end

    def inherited(s); end
  end
end

module Packs::Private
  class << self
    sig { returns(::Pathname) }
    def root; end
  end
end

class Packs::Private::Configuration < ::T::Struct
  prop :pack_paths, T::Array[::String]

  class << self
    sig { returns(::Packs::Private::Configuration) }
    def fetch; end

    def inherited(s); end

    sig { params(config_hash: T::Hash[T.untyped, T.untyped]).returns(T::Array[::String]) }
    def pack_paths(config_hash); end
  end
end

Packs::Private::Configuration::CONFIGURATION_PATHNAME = T.let(T.unsafe(nil), Pathname)
Packs::Private::Configuration::DEFAULT_PACK_PATHS = T.let(T.unsafe(nil), Array)
