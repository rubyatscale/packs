# typed: false

RSpec.describe Packs, :skip_chdir_to_tmpdir do
  let(:readme) do
    Pathname.new('README.md')
  end

  let(:actual_content) { readme.read }

  let(:expected_content) do
    all_docs = []
    Packs::CLI.all_commands.each_value do |command|
      all_docs << <<~DOCUMENTATION
        ## #{command.description}
        `bin/packs #{command.usage}`

      DOCUMENTATION

      if command.long_description
        all_docs << command.long_description
        all_docs << "\n"
      end
    end

    new_autogenerated_content = <<~MARKDOWN.chomp
      ## CLI Documentation
      #{all_docs.join}
      ## Releasing
    MARKDOWN
    new_content = readme.read.gsub(/## CLI Documentation.*?## Releasing/m, new_autogenerated_content)

    new_content
  end

  describe 'CLI Documentation' do
    it 'is up to date' do
      if ENV['OVERWRITE']
        readme.write(expected_content)
      else
        expect(actual_content).to eq(expected_content), 'README.md is out of date. Use OVERWRITE=1 bundle exec rspec'
      end
    end
  end
end
